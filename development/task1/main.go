package main

import (
	"fmt"
	"log"
	"time"

	"github.com/beevik/ntp"
)

/*
Создать программу печатающую точное время с использованием NTP -библиотеки.
Инициализировать как go module. Использовать библиотеку github.com/beevik/ntp.
Написать программу печатающую текущее время/точное время с использованием этой библиотеки.

Требования:
Программа должна быть оформлена как go module
Программа должна корректно обрабатывать ошибки библиотеки:
выводить их в STDERR и возвращать ненулевой код выхода в OS
*/

func getTime() time.Time { //определим отдельную функция чтобы протестировать
	time, err := ntp.Time("0.beevik-ntp.pool.ntp.org") //подключаемся к ntp-серверу(Network Time Protocol),
	//получаем время и ошибку
	if err != nil { //обрабатываем ошибку
		log.Fatal(err) //основной способ вывести ошибку - с логгером, так ошибка
		//выводится stderr и после этого вызывается os.Exit(1)

		/*
			способ 2: fmt.Fprintf(os.Stderr, err.Error()) - выбираем нужный поток - Stderr и выводим ошибку туда,
			после вызываем os.Exit(1) чтобы завершить программу

			способ 3: os.Stderr.WriteString(err.Error()) - обращаемся к Stderr напрямую через os и потом вызываем
			os.Exit(1) чтобы завершить программу, код 1 означает закрытие с проблемой зависящей от пользователя
		*/

	}
	return time //возращаем время
}

func main() { //в функции сравним системное время с временем полученным с сервера
	fmt.Println("Время с сервера: ", getTime())  //выводим результат функции
	fmt.Println("Время системное: ", time.Now()) //выводим системное время
}
